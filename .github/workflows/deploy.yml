name: Deploy Website & Build Mobile App

on:
  push:
    branches: [main]
    paths:
      - "website/**"
      - "mobile/**"
      - ".github/workflows/deploy.yml"

jobs:
  build-website:
    name: Build & Deploy Website
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Build website
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages

  build-mobile:
    name: EAS Build Android & iOS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set Expo Token
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      # Android build
      - name: Trigger Android Build (APK)
        id: build_android
        run: |
          BUILD_ID=$(eas build --platform android --profile preview --non-interactive --json | jq -r '.[0].id')
          echo "ANDROID_BUILD_ID=$BUILD_ID" >> $GITHUB_ENV
          echo "Waiting for Android build to complete..."
          while true; do
            STATUS_JSON=$(eas build:status --non-interactive --json --build-id $BUILD_ID)
            STATUS=$(echo "$STATUS_JSON" | jq -r '.status')
            echo "Current status: $STATUS"
            if [ "$STATUS" = "finished" ]; then
              echo "$STATUS_JSON" > android-build.json
              ANDROID_URL=$(echo "$STATUS_JSON" | jq -r '.artifacts.buildUrl')
              echo "ANDROID_URL=$ANDROID_URL" >> $GITHUB_ENV
              break
            elif [ "$STATUS" = "errored" ]; then
              echo "Android build failed"
              exit 1
            fi
            sleep 10
          done

      # iOS build
      # - name: Trigger iOS Build
      #   id: build_ios
      #   run: |
      #     BUILD_ID=$(eas build --platform ios --profile production --non-interactive --json | jq -r '.id')
      #     echo "IOS_BUILD_ID=$BUILD_ID" >> $GITHUB_ENV
      #     echo "Waiting for iOS build to complete..."
      #     while true; do
      #       STATUS_JSON=$(eas build:status --non-interactive --json --build-id $BUILD_ID)
      #       STATUS=$(echo "$STATUS_JSON" | jq -r '.status')
      #       echo "Current status: $STATUS"
      #       if [ "$STATUS" = "finished" ]; then
      #         echo "$STATUS_JSON" > ios-build.json
      #         IOS_URL=$(echo "$STATUS_JSON" | jq -r '.artifacts.buildUrl')
      #         echo "IOS_URL=$IOS_URL" >> $GITHUB_ENV
      #         break
      #       elif [ "$STATUS" = "errored" ]; then
      #         echo "iOS build failed"
      #         exit 1
      #       fi
      #       sleep 10
      #     done

      # Download artifacts
      - name: Download Android APK
        run: |
          mkdir -p dist
          curl -o dist/app-android.apk "$ANDROID_URL"

      # - name: Download iOS IPA
      #   run: |
      #     curl -o dist/app-ios.ipa "$IOS_URL"

      # - name: Upload Android & iOS Artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: mobile-builds
      #     path: mobile/dist
